commit d7593cdca4e7ae8fc4481bb2a29b70b7ebd414ac
Author: michael chang <michaelc@berkeley.edu>
Date:   Thu Apr 20 14:44:57 2017 -0700

    Insert a sleep in the main session after the queue runners are loaded so that the images can fill the queue. Also Increase the size of the queue to 800 *times the number of shards. Also limit the amount of data that has to be remaining in the queue

diff --git a/inception/inception/image_processing.py b/inception/inception/image_processing.py
index df16812..e04abfc 100644
--- a/inception/inception/image_processing.py
+++ b/inception/inception/image_processing.py
@@ -460,11 +460,15 @@ def batch_inputs(dataset, batch_size, train, num_preprocess_threads=None,
     # 1 image uses 299*299*3*4 bytes = 1MB
     # The default input_queue_memory_factor is 16 implying a shuffling queue
     # size: examples_per_shard * 16 * 1MB = 17.6GB
-    min_queue_examples = examples_per_shard * FLAGS.input_queue_memory_factor
+
+    #Expanding the queue so it can fill during the experiment
+    #All input_queue_memory_factory is number of shards? Not clear may need to change this constant
+    min_capacity = examples_per_shard * 800
+    min_remaining_after_dequeue = examples_per_shard * FLAGS.input_queue_memory_factor
     if train:
       examples_queue = tf.RandomShuffleQueue(
-          capacity=min_queue_examples + 3 * batch_size,
-          min_after_dequeue=min_queue_examples,
+          capacity=min_capacity + 3 * batch_size,
+          min_after_dequeue=min_remaining_after_dequeue,
           dtypes=[tf.string])
     else:
       examples_queue = tf.FIFOQueue(
diff --git a/inception/inception/inception_train.py b/inception/inception/inception_train.py
index 32c959d..17ba8de 100644
--- a/inception/inception/inception_train.py
+++ b/inception/inception/inception_train.py
@@ -328,6 +328,14 @@ def train(dataset):
 
     # Start the queue runners.
     tf.train.start_queue_runners(sess=sess)
+    #Allow time for the the queues to fill up with training examples
+    print('LOGGING WARNING: Starting the queue runner')
+    queue_size = sess.run("batch/fifo_queue_Size:0")
+    print('The current queue size is %.3f' % queue_size)
+    time.sleep(120)
+    queue_size = sess.run("batch/fifo_queue_Size:0")
+    print('LOGGING WARNING: Waking up after 60 seconds of filling in the queue')
+    print('The current queue size is %.3f' % queue_size)
 
     summary_writer = tf.summary.FileWriter(
         FLAGS.train_dir,
@@ -340,11 +348,10 @@ def train(dataset):
 
       assert not np.isnan(loss_value), 'Model diverged with loss = NaN'
 
-      if step % 10 == 0:
-        examples_per_sec = FLAGS.batch_size / float(duration)
-        format_str = ('%s: step %d, loss = %.2f (%.1f examples/sec; %.3f '
-                      'sec/batch)')
-        print(format_str % (datetime.now(), step, loss_value,
+      examples_per_sec = FLAGS.batch_size / float(duration)
+      format_str = ('%s: step %d, loss = %.2f (%.1f examples/sec; %.3f '
+                    'sec/batch)')
+      print(format_str % (datetime.now(), step, loss_value,
                             examples_per_sec, duration))
 
       if step % 100 == 0:
